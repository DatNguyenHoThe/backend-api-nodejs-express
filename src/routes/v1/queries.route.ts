import express from 'express';
import Product from '../../models/product.models'
const router = express.Router();


//get all
/* router.get('/queries', async(req, res) => {
    console.log('queries')
    // find()
    const products = await Product.find();
    return res.status(200).json(products);
}) */
//get by id
router.get('/queries/:id', async(req, res) => {
    const { id } = req.params;
    const product = await Product.findById(id);
    return res.status(200).json(product);
})

// SELECT TOP 1 FROM product WHERE discout = 50
router.get('/queries', async(req, res) => {
    /* const product = await Product.findOne({
        discount = 50
    }); */

// L·∫•y t·∫•t c·∫£ nh·ªØng thu·ªôc t√≠nh c·∫ßn thi·∫øt

/* const products = await Product
.find()
.select('product_name price discount')

res.status(200).json(products);
*/


//5. L·∫•y t·∫•t c·∫£ c√°c tr∆∞·ªùng tr·ª´ createdAt v√† updatedAt
/* const products = await Product
.find()
.select('-createdAt updatedAt')

 */
//6. S·∫Øp x·∫øp tƒÉng d·∫ßn, gi·∫£m d·∫ßn
/* const products = await Product
.find()
.select('-createdAt updatedAt')
.sort({
    product_name: 1, // tƒÉng d·∫ßn
    price: -1 // gi·∫£m d·∫ßn
})
res.json(products); */

//7. t√¨m ki·∫øm v·ªõi so s√°nh b·∫±ng
/* const product = await Product
.find({
    model_year: 2492
    // price: {$qt: 1068.75} --> ƒëang l·ªói ƒë·ªãnh d·∫°ng
})
res.status(200).json(product); */

//10. Update product WHERE id = xxx
/* const result = await Product.findByIdAndUpdate("67b479aef8df8c568102efd8", {
    price: 1000
},
{
    new: true, // tr·∫£ v·ªÅ result l√† ƒë·ªØ li·ªáu ƒë√£ update
})
res.json(result); */
//11. Update product SET discount = 10 WHERE model_year = xxx
/* const result = await Product.findOneAndUpdate(
    {
        model_year: 2492
    },
    {
        discount: 80
    },
    {
        new: true, // tr·∫£ v·ªÅ result l√† ƒë·ªØ li·ªáu ƒë√£ update 
    }
)
res.json(result); */

//12.L·∫•y v√† Ph√¢n trang
/* const currentPage = 1;
const pageSize = 10;
const product = await Product
.find()
.skip((currentPage - 1)*pageSize)
.limit(pageSize)
res.json(product); */

//13. left join nhi·ªÅu collection v·ªõi populate
/* const product = await Product
.find()
.populate('category',"category_name")// join v·ªõi category
.populate('brand_id', "brand_name")// join v·ªõi brand
res.json(product); */

//14. To√°n t·ª≠ t√¨m ki·∫øm
/* const product = await Product
.find({
    product_name: new RegExp(/Soft/, 'i') // t√¨m ki·∫øm t√™n sp g·∫ßn ƒë√∫ng
})
.populate('category',"category_name")// join v·ªõi category
.populate('brand_id', "brand_name")// join v·ªõi brand
res.json(product); */

//üî∂ Truy v·∫•n c∆° b·∫£n
//1. T√¨m ki·∫øm t·∫•t c·∫£
/* const products = await Product.find();
res.json(products); */

//2.Ch·ªçn c√°c tr∆∞·ªùng c·∫ßn thi·∫øt 
/* const products = await Product
.find()
.select('product_name price');

res.status(200).json(products); */

//3. T√¨m ki·∫øm v√† s·∫Øp x·∫øp
/* const products = await Product
.find()
.select('product_name price')
.sort({
    product_name: 1, // s·∫Øp x·∫øp tƒÉng d·∫ßn
    price: -1, // s·∫Øp x·∫øp gi·∫£m d·∫ßn
})

res.json(products); */

//4. T√¨m ki·∫øm v·ªõi ƒëi·ªÅu ki·ªán
// SELECT * FROM Tank WHERE discount = 18
/* const products = await Product
.find({
    discount: 18
})

res.json(products); */

//5. T√¨m m·ªôt t√†i li·ªáu
// SELECT TOP 1 * FROM Tank WHERE model_year = 2880
/* const product = await Product
.findOne({
    model_year: 2880
}) */

//6. T√¨m theo ID
/* const product = await Product.findById("67b479aef8df8c568102efd4");

res.json(product); */

//7. T√¨m ki·∫øm v·ªõi c√°c To√°n t·ª≠

//----$eq (So s√°nh b·∫±ng)-----//
/* const product = await Product
.find({
    model_year: {$eq: 2880}
})

res.json(product); */

//----$ne (kh√¥ng b·∫±ng)-----//
/* const product = await Product
.find({
    model_year:{ $ne: 2880 }
})

res.json(product); */

//----$ne (kh√¥ng b·∫±ng)-----//


}); 
export default router